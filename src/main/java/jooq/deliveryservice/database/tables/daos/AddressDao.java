/*
 * This file is generated by jOOQ.
 */
package jooq.deliveryservice.database.tables.daos;


import java.util.List;
import java.util.Optional;

import jooq.deliveryservice.database.tables.Address;
import jooq.deliveryservice.database.tables.records.AddressRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressDao extends DAOImpl<AddressRecord, jooq.deliveryservice.database.tables.pojos.Address, Integer> {

    /**
     * Create a new AddressDao without any configuration
     */
    public AddressDao() {
        super(Address.ADDRESS, jooq.deliveryservice.database.tables.pojos.Address.class);
    }

    /**
     * Create a new AddressDao with an attached configuration
     */
    public AddressDao(Configuration configuration) {
        super(Address.ADDRESS, jooq.deliveryservice.database.tables.pojos.Address.class, configuration);
    }

    @Override
    public Integer getId(jooq.deliveryservice.database.tables.pojos.Address object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Address.ADDRESS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchById(Integer... values) {
        return fetch(Address.ADDRESS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.deliveryservice.database.tables.pojos.Address fetchOneById(Integer value) {
        return fetchOne(Address.ADDRESS.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<jooq.deliveryservice.database.tables.pojos.Address> fetchOptionalById(Integer value) {
        return fetchOptional(Address.ADDRESS.ID, value);
    }

    /**
     * Fetch records that have <code>user_info_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchRangeOfUserInfoId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Address.ADDRESS.USER_INFO_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_info_id IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchByUserInfoId(Integer... values) {
        return fetch(Address.ADDRESS.USER_INFO_ID, values);
    }

    /**
     * Fetch records that have <code>district_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchRangeOfDistrictId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Address.ADDRESS.DISTRICT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>district_id IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchByDistrictId(Integer... values) {
        return fetch(Address.ADDRESS.DISTRICT_ID, values);
    }

    /**
     * Fetch records that have <code>street BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchRangeOfStreet(String lowerInclusive, String upperInclusive) {
        return fetchRange(Address.ADDRESS.STREET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>street IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchByStreet(String... values) {
        return fetch(Address.ADDRESS.STREET, values);
    }

    /**
     * Fetch records that have <code>house BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchRangeOfHouse(String lowerInclusive, String upperInclusive) {
        return fetchRange(Address.ADDRESS.HOUSE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>house IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchByHouse(String... values) {
        return fetch(Address.ADDRESS.HOUSE, values);
    }

    /**
     * Fetch records that have <code>flat BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchRangeOfFlat(String lowerInclusive, String upperInclusive) {
        return fetchRange(Address.ADDRESS.FLAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>flat IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Address> fetchByFlat(String... values) {
        return fetch(Address.ADDRESS.FLAT, values);
    }
}
