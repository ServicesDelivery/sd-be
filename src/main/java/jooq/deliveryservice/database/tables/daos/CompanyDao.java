/*
 * This file is generated by jOOQ.
 */
package jooq.deliveryservice.database.tables.daos;


import java.util.List;
import java.util.Optional;

import jooq.deliveryservice.database.tables.Company;
import jooq.deliveryservice.database.tables.records.CompanyRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyDao extends DAOImpl<CompanyRecord, jooq.deliveryservice.database.tables.pojos.Company, Integer> {

    /**
     * Create a new CompanyDao without any configuration
     */
    public CompanyDao() {
        super(Company.COMPANY, jooq.deliveryservice.database.tables.pojos.Company.class);
    }

    /**
     * Create a new CompanyDao with an attached configuration
     */
    public CompanyDao(Configuration configuration) {
        super(Company.COMPANY, jooq.deliveryservice.database.tables.pojos.Company.class, configuration);
    }

    @Override
    public Integer getId(jooq.deliveryservice.database.tables.pojos.Company object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Company.COMPANY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchById(Integer... values) {
        return fetch(Company.COMPANY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public jooq.deliveryservice.database.tables.pojos.Company fetchOneById(Integer value) {
        return fetchOne(Company.COMPANY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<jooq.deliveryservice.database.tables.pojos.Company> fetchOptionalById(Integer value) {
        return fetchOptional(Company.COMPANY.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Company.COMPANY.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchByName(String... values) {
        return fetch(Company.COMPANY.NAME, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Company.COMPANY.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchByDescription(String... values) {
        return fetch(Company.COMPANY.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchRangeOfPrice(String lowerInclusive, String upperInclusive) {
        return fetchRange(Company.COMPANY.PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchByPrice(String... values) {
        return fetch(Company.COMPANY.PRICE, values);
    }

    /**
     * Fetch records that have <code>rating BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchRangeOfRating(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Company.COMPANY.RATING, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>rating IN (values)</code>
     */
    public List<jooq.deliveryservice.database.tables.pojos.Company> fetchByRating(Double... values) {
        return fetch(Company.COMPANY.RATING, values);
    }
}
