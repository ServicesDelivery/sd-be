/*
 * This file is generated by jOOQ.
 */
package jooq.deliveryservice.database.tables.records;


import jooq.deliveryservice.database.tables.Address;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AddressRecord extends UpdatableRecordImpl<AddressRecord> implements Record6<Integer, Integer, Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>delivery.address.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>delivery.address.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>delivery.address.user_info_id</code>.
     */
    public void setUserInfoId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>delivery.address.user_info_id</code>.
     */
    public Integer getUserInfoId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>delivery.address.district_id</code>.
     */
    public void setDistrictId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>delivery.address.district_id</code>.
     */
    public Integer getDistrictId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>delivery.address.street</code>.
     */
    public void setStreet(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>delivery.address.street</code>.
     */
    public String getStreet() {
        return (String) get(3);
    }

    /**
     * Setter for <code>delivery.address.house</code>.
     */
    public void setHouse(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>delivery.address.house</code>.
     */
    public String getHouse() {
        return (String) get(4);
    }

    /**
     * Setter for <code>delivery.address.flat</code>.
     */
    public void setFlat(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>delivery.address.flat</code>.
     */
    public String getFlat() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, Integer, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Address.ADDRESS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Address.ADDRESS.USER_INFO_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Address.ADDRESS.DISTRICT_ID;
    }

    @Override
    public Field<String> field4() {
        return Address.ADDRESS.STREET;
    }

    @Override
    public Field<String> field5() {
        return Address.ADDRESS.HOUSE;
    }

    @Override
    public Field<String> field6() {
        return Address.ADDRESS.FLAT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserInfoId();
    }

    @Override
    public Integer component3() {
        return getDistrictId();
    }

    @Override
    public String component4() {
        return getStreet();
    }

    @Override
    public String component5() {
        return getHouse();
    }

    @Override
    public String component6() {
        return getFlat();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserInfoId();
    }

    @Override
    public Integer value3() {
        return getDistrictId();
    }

    @Override
    public String value4() {
        return getStreet();
    }

    @Override
    public String value5() {
        return getHouse();
    }

    @Override
    public String value6() {
        return getFlat();
    }

    @Override
    public AddressRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public AddressRecord value2(Integer value) {
        setUserInfoId(value);
        return this;
    }

    @Override
    public AddressRecord value3(Integer value) {
        setDistrictId(value);
        return this;
    }

    @Override
    public AddressRecord value4(String value) {
        setStreet(value);
        return this;
    }

    @Override
    public AddressRecord value5(String value) {
        setHouse(value);
        return this;
    }

    @Override
    public AddressRecord value6(String value) {
        setFlat(value);
        return this;
    }

    @Override
    public AddressRecord values(Integer value1, Integer value2, Integer value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AddressRecord
     */
    public AddressRecord() {
        super(Address.ADDRESS);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(Integer id, Integer userInfoId, Integer districtId, String street, String house, String flat) {
        super(Address.ADDRESS);

        setId(id);
        setUserInfoId(userInfoId);
        setDistrictId(districtId);
        setStreet(street);
        setHouse(house);
        setFlat(flat);
    }

    /**
     * Create a detached, initialised AddressRecord
     */
    public AddressRecord(jooq.deliveryservice.database.tables.pojos.Address value) {
        super(Address.ADDRESS);

        if (value != null) {
            setId(value.getId());
            setUserInfoId(value.getUserInfoId());
            setDistrictId(value.getDistrictId());
            setStreet(value.getStreet());
            setHouse(value.getHouse());
            setFlat(value.getFlat());
        }
    }
}
