/*
 * This file is generated by jOOQ.
 */
package jooq.deliveryservice.database.tables.records;


import jooq.deliveryservice.database.tables.Company;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompanyRecord extends UpdatableRecordImpl<CompanyRecord> implements Record5<Integer, String, String, String, Double> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>delivery.company.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>delivery.company.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>delivery.company.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>delivery.company.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>delivery.company.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>delivery.company.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>delivery.company.price</code>.
     */
    public void setPrice(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>delivery.company.price</code>.
     */
    public String getPrice() {
        return (String) get(3);
    }

    /**
     * Setter for <code>delivery.company.rating</code>.
     */
    public void setRating(Double value) {
        set(4, value);
    }

    /**
     * Getter for <code>delivery.company.rating</code>.
     */
    public Double getRating() {
        return (Double) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, String, Double> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, String, String, Double> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Company.COMPANY.ID;
    }

    @Override
    public Field<String> field2() {
        return Company.COMPANY.NAME;
    }

    @Override
    public Field<String> field3() {
        return Company.COMPANY.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return Company.COMPANY.PRICE;
    }

    @Override
    public Field<Double> field5() {
        return Company.COMPANY.RATING;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getPrice();
    }

    @Override
    public Double component5() {
        return getRating();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getPrice();
    }

    @Override
    public Double value5() {
        return getRating();
    }

    @Override
    public CompanyRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CompanyRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public CompanyRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CompanyRecord value4(String value) {
        setPrice(value);
        return this;
    }

    @Override
    public CompanyRecord value5(Double value) {
        setRating(value);
        return this;
    }

    @Override
    public CompanyRecord values(Integer value1, String value2, String value3, String value4, Double value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompanyRecord
     */
    public CompanyRecord() {
        super(Company.COMPANY);
    }

    /**
     * Create a detached, initialised CompanyRecord
     */
    public CompanyRecord(Integer id, String name, String description, String price, Double rating) {
        super(Company.COMPANY);

        setId(id);
        setName(name);
        setDescription(description);
        setPrice(price);
        setRating(rating);
    }

    /**
     * Create a detached, initialised CompanyRecord
     */
    public CompanyRecord(jooq.deliveryservice.database.tables.pojos.Company value) {
        super(Company.COMPANY);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDescription(value.getDescription());
            setPrice(value.getPrice());
            setRating(value.getRating());
        }
    }
}
